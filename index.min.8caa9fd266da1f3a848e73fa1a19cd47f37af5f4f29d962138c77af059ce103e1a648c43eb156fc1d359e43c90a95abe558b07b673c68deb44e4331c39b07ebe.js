var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(e){const s=suggestions.classList.contains("d-none");if(s)return;const t=[...suggestions.querySelectorAll("a")];if(t.length===0)return;const n=t.indexOf(document.activeElement);if(e.key==="ArrowUp"){e.preventDefault();const s=n>0?n-1:0;t[s].focus()}else if(e.key==="ArrowDown"){e.preventDefault();const s=n+1<t.length?n+1:n;t[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/en/docs/prologue/introduction/",title:"Introduction",description:"Doks is a Hugo theme for building secure, fast, and SEO-ready documentation websites, which you can easily update and customize.",content:`Get started # There are two main ways to get started with Doks:
Tutorial # ðŸ‘‰ The Tutorial is intended for novice to intermediate users. Step-by-step instructions on how to start a new Doks project. Tutorial â†’
Quick Start # ðŸ‘‰ The Quick Start is intended for intermediate to advanced users. One page summary of how to start a new Doks project. Quick Start â†’
Go further # Recipes, Reference Guides, Extensions, and Showcase.
Recipes # Get instructions on how to accomplish common tasks with Doks. Recipes â†’
Reference Guides # Learn how to customize Doks to fully make it your own. Reference Guides â†’
Extensions # Get instructions on how to add even more to Doks. Extensions â†’
Showcase # See what others have build with Doks. Showcase â†’
Contributing # Find out how to contribute to Doks. Contributing â†’
Help # Get help on Doks. Help â†’
`}),e.add({id:1,href:"/en/docs/prologue/",title:"Prologue",description:"Prologue Doks.",content:""}),e.add({id:2,href:"/en/docs/prologue/quick-start/",title:"Quick Start",description:"One page summary of how to start a new Doks project.",content:`Requirements # Git â€” latest source release Node.js â€” latest LTS version or newer Why Node.js? Doks uses npm (included with Node.js) to centralize dependency management, making it easy to update resources, build tooling, plugins, and build scripts. Start a new Doks project # Create a new site, change directories, install dependencies, and start development server.
Create a new site # Doks is available as a child theme and a starter theme.
Child theme # Intended for novice to intermediate users Intended for minor customizations Easily update npm packages â€” including Doks git clone https://github.com/h-enk/doks-child-theme.git my-doks-site Starter theme # Intended for intermediate to advanced users Intended for major customizations Easily update npm packages git clone https://github.com/h-enk/doks.git my-doks-site Help me choose Not sure which one is for you? Pick the child theme. Change directories # cd my-doks-site Install dependencies # npm install Start development server # npm run start Doks will start the Hugo development webserver accessible by default at http://localhost:1313. Saved changes will live reload in the browser.
Other commands # Doks comes with commands for common tasks. Commands â†’
`}),e.add({id:3,href:"/en/docs/prologue/commands/",title:"Commands",description:"Doks comes with commands for common tasks.",content:` ðŸ’¡ You can change the commands in the scripts section of \`./package.json\`. create # Create new content for your site:
npm run create [path] [flags] See also the Hugo docs: hugo new.
Docs based tree # Create a docs based tree â€” with a single command:
npm run create -- --kind docs [section] For example, create a docs based tree named guides:
npm run create -- --kind docs guides lint # Check scripts, styles, and markdown for errors:
npm run lint scripts # Check scripts for errors:
npm run lint:scripts [-- --fix] styles # Check styles for errors:
npm run lint:styles [-- --fix] markdown # Check markdown for errors:
npm run lint:markdown [-- --fix] clean # Delete temporary directories:
npm run clean start # Start local development server:
npm run start build # Build production website:
npm run build functions # Build Lambda functions:
npm run build:functions preview # Build production website including draft and future content:
npm run build:preview `}),e.add({id:4,href:"/en/docs/help/",title:"Help",description:"Help Doks.",content:""}),e.add({id:5,href:"/docs/training/onlyoffice/speichern/",title:"Speichern von Only-Office Dokumenten",description:`Damit deine Dateien nicht verloren gehen, musst du sie speichern. Das machst du am besten im passenden Ordner. Die Dokumente, die du in einem Fach erstellt
Klicke oben links in der MenÃ¼leiste auf â€žDateiâ€œ. Um nun die Datei auf deinem Computer speichern zu kÃ¶nnen, wÃ¤hlst du im MenÃ¼ Datei die Option Herunterladen als aus und wÃ¤hlst dann dein gewÃ¼nschtes Dateiformat aus in deinem Fall wÃ¤hlst du .docx Wenn du dies erledigt hast sollte ein Fenster in deinem auftauchen, welches dich fragt ob du die Datei â€žSpeichernâ€œ, â€žSpeichern unterâ€œ oder â€žÃ–ffnenâ€œ mÃ¶chtest.`,content:`Damit deine Dateien nicht verloren gehen, musst du sie speichern. Das machst du am besten im passenden Ordner. Die Dokumente, die du in einem Fach erstellt
Klicke oben links in der MenÃ¼leiste auf â€žDateiâ€œ. Um nun die Datei auf deinem Computer speichern zu kÃ¶nnen, wÃ¤hlst du im MenÃ¼ Datei die Option Herunterladen als aus und wÃ¤hlst dann dein gewÃ¼nschtes Dateiformat aus in deinem Fall wÃ¤hlst du .docx Wenn du dies erledigt hast sollte ein Fenster in deinem auftauchen, welches dich fragt ob du die Datei â€žSpeichernâ€œ, â€žSpeichern unterâ€œ oder â€žÃ–ffnenâ€œ mÃ¶chtest. Um deine Datei in deiner Ordnerstruktur wiederzufinden wÃ¤hlst du die Option â€žSpeichern unterâ€œ. Wenn du auf die SchaltflÃ¤che â€žSpeichern unterâ€œ geklickt hast wirst du in dein Ordnersystem auf deinem PC weitergeleitet. Dort wÃ¤hlst du dein gewÃ¼nschten Ordner aus, in dem du dein Dokument speichern mÃ¶chtest. Du wirst dann in ein Fenster weitergeleitet. In diesem Fenster gibt es eine Spalte mit dem Namen der Datei, Ã¤ndere den Namen der Datei zu deinem gewÃ¼nschten Namen. Es ist sehr empfehlenswert deine Datei so zu benennen, dass du sie auch spÃ¤ter wiederfinden kannst. Um die Datei schlussendlich zu Speichern drÃ¼ckst du auf den Button â€žSpeichernâ€œ. ðŸ’¡ Um deine Dateien immer wiederzufinden, ist es sinnvoll, ihnen Namen zu geben, die zum Inhalt der Datei passen. Schreibst du zum Beispiel im Fach Deutsch ein MÃ¤rchen, dann kannst du die Datei â€žMÃ¤rchen vom goldenen Handschuhâ€œ nennen. Manchmal macht es auch Sinn, in den Dateinamen das Datum, an dem du daran gearbeitet hast, hinzuzufÃ¼gen. Auch ist es fÃ¼r die Schule sinnvoll einen eigenen Ordner anzulegen. In diesem Ordner solltest du dann fÃ¼r jedes Fach einen Unterordner anlegen. In diesen Ordnern solltest du selbstverstÃ¤ndlich auch eine Struktur anlegen. Dateien suchen: # Auch wenn du sehr genau darauf achtest, wie du deine Dateien nennst und wo du sie speicherst, kann es manchmal passieren, dass du sie nicht mehr wiederfindest. Zum Beispiel dann, wenn es schon sehr lange her ist, dass du damit gearbeitet hast. Deswegen gibt es eine Suchfunktion, mit der du Dateien auf dem Computer suchen und finden kannst. DafÃ¼r musst du dich aber ungefÃ¤hr an den Namen deiner Datei erinnern. DafÃ¼r klickst du auf â€žeigene Dateienâ€œ. In dem Fenster, das sich Ã¶ffnet, hast du oben rechts eine EingabemÃ¶glichkeit, in der jetzt noch steht â€žeigene Dateien durchsuchenâ€œ. Dort kannst du den Namen deiner Datei eingeben und anschlieÃŸend auf den blauen Pfeil drÃ¼cken. Der Computer sucht jetzt deine Datei und zeigt dir seine Ergebnisse in der Mitte des Textfeldes an.
`}),e.add({id:6,href:"/en/docs/help/how-to-update/",title:"How to Update",description:"Regularly update the installed npm packages to keep your Doks website stable, usable, and secure.",content:` ðŸ’¡ Learn more about semantic versioning and advanced range syntax. Check for outdated packages # The npm outdated command will check the registry to see if any (or, specific) installed packages are currently outdated:
npm outdated [[\u0026lt;@scope\u0026gt;/]\u0026lt;pkg\u0026gt; ...] Update packages # The npm update command will update all the packages listed to the latest version (specified by the tag config), respecting semver:
npm update [\u0026lt;pkg\u0026gt;...] `}),e.add({id:7,href:"/en/docs/help/troubleshooting/",title:"Troubleshooting",description:"Solutions to common problems.",content:`Problems updating npm packages # Delete the ./node_modules folder, and run again:
npm install Problems with cache # Delete the temporary directories:
npm run clean `}),e.add({id:8,href:"/en/docs/help/faq/",title:"FAQ",description:"Answers to frequently asked questions.",content:`Hyas? # Doks is a Hyas theme build by the creator of Hyas.
Footer notice? # Please keep it in place.
Keyboard shortcuts for search? # focus: Ctrl + / select: â†“ and â†‘ open: Enter close: Esc Other documentation? # Netlify Hugo Can I get support? # Create a topic:
Netlify Community Hugo Forums Doks Discussions Contact the creator? # Send h-enk a message:
Netlify Community Hugo Forums Doks Discussions `}),e.add({id:9,href:"/docs/einfuehrung/",title:"EinfÃ¼hrung",description:"",content:""}),e.add({id:10,href:"/docs/",title:"Docs",description:"",content:""}),e.add({id:11,href:"/docs/training/",title:"",description:"",content:""}),e.add({id:12,href:"/en/docs/",title:"Docs",description:"Docs Doks.",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()